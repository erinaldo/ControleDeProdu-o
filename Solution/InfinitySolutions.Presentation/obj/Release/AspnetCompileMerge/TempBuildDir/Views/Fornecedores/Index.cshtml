@using InfinitySolutions.Entity
@using InfinitySolutions.Commom
@model InfinitySolutions.Presentation.Models.FornecedorModel
@{
    ViewBag.Title = "Fornecedores";
    ViewBag.Imagem = "~/Content/imagens/Fornecedor.png";

    string ClasseMensagem = Model.Retorno.IsValido ? "alert-success" : "alert-danger";
    string ClasseVisivel = !String.IsNullOrEmpty(@Model.Retorno.Mensagem) ? String.Empty : "invisivel";
    var login = Session[Constantes.USUARIO_LOGADO] as Login;
}

<div class="row tabela-inicio">
    <div class="col-lg-12 col-md-12 col-xs-12">

        @if (login.TiposPermissoes.Any(p => p.Codigo == (int)EnumTipoPermissao.ADICIONAR))
        {
            <a data-toggle="modal" data-target="#modalIncluirFornecedor">
                Adicionar Fornecedor
            </a>
        }

        <div class="jumbotron">
            <div id="divMensagem" class="alert @ClasseMensagem @ClasseVisivel js-mensagem" role="alert">
                <label><span id="spanMensagem" class="js-escrita-mensagem">@Model.Retorno.Mensagem</span></label>
            </div>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">NOME</th>
                        <th scope="col">EMAIL</th>
                        <th scope="col">TELEFONE</th>
                        <th scope="col">AÇÕES</th>
                    </tr>
                </thead>
                <tbody>

                    @if (Model.Retorno.Entity != null)
                    {
                        foreach (var fornecedor in (List<Fornecedor>)Model.Retorno.Entity)
                        {
                            var telefone = fornecedor.Telefone.HasValue && fornecedor.Telefone.Value > 0 ? fornecedor.Telefone.Value.ToString().Length > 10 ? fornecedor.Telefone.Value.ToString("(00) 00000-0000") : fornecedor.Telefone.Value.ToString("(00) 0000-0000") : String.Empty;

                            <tr>
                                <td scope="col">@fornecedor.Nome.ToUpper()</td>
                                <td scope="col">@fornecedor.Email.ToUpper()</td>
                                <td scope="col">@telefone</td>
                                <td scope="col">
                                    <img id="@fornecedor.Codigo" src="~/Content/imagens/EditarMenor.png" alt="ALTERAR FORNECEDOR" title="ALTERAR FORNECEDOR" class="js-AlterarFornecedor" />
                                    <img id="@fornecedor.Codigo" src="~/Content/imagens/ExcluirMenor.png" alt="EXCLUIR FORNECEDOR" title="EXCLUIR FORNECEDOR" class="js-ExcluirFornecedor" />
                                </td>
                            </tr>
                        }
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>

@using (Html.BeginForm("Salvar", "Fornecedores", FormMethod.Post, new { @class = "form-horizontal", id = "formIncluirFornecedor" }))
{

    @Html.HiddenFor(model => model.Fornecedor.Codigo, new { id = "hdnFornecedorCodigo" })

    <div class="modal fade" id="modalIncluirFornecedor" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">FORNECEDOR</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="jumbotron">
                        <div id="divMensagem" class="alert @ClasseMensagem @ClasseVisivel js-mensagem" role="alert">
                            <label><span id="spanMensagem" class="js-escrita-mensagem">@Model.Retorno.Mensagem</span></label>
                        </div>
                        <div class="form-group">
                            <div class="col-lg-4 col-md-4 col-xs-4">
                                <label><span class="fonte-vermelha control-label">* </span>Nome</label>
                                @Html.TextBoxFor(m => m.Fornecedor.Nome, new { id = "txtFornecedorNome", @class = "form-control js-obrigatorio" })
                            </div>
                            <div class="col-lg-4 col-md-4 col-xs-4">
                                <label>Email</label>
                                @Html.TextBoxFor(m => m.Fornecedor.Email, new { id = "txtFornecedorEmail", @class = "form-control" })
                            </div>
                            <div class="col-lg-4 col-md-4 col-xs-4">
                                <label>Telefone</label>
                                @Html.TextBoxFor(m => m.Fornecedor.Telefone, new { id = "txtFornecedorTelefone", @class = "form-control js-telefone" })
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
                        <input type="submit" class="btn btn-primary" value="Salvar" id="btnSalvarFornecedor" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script src="~/Scripts/Fornecedores/index.js"></script>